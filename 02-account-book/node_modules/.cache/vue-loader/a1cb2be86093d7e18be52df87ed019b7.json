{"remainingRequest":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/src/components/ItemDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/src/components/ItemDialog.vue","mtime":1644297536304},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/cache-loader/dist/cjs.js","mtime":1644038724659},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/babel-loader/lib/index.js","mtime":1644038724176},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/cache-loader/dist/cjs.js","mtime":1644038724659},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/vue-loader/lib/index.js","mtime":1644038728759}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJdGVtRGlhbG9nJywKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIC8qKiBJcyBkaWFsb2cgc2hvd24/PyAqLwogICAgICBzaG93OiBmYWxzZSwKICAgICAgLyoqIGNoZWNrIHRoZSBpbnB1dCBkYXRhIGlzIHZhbGlkICovCiAgICAgIHZhbGlkOiBmYWxzZSwKICAgICAgLyoqIGRhdGUgc2VsZWN0aW9uIG1lbnUgc2l0dWF0aW9uICovCiAgICAgIG1lbnU6IGZhbHNlLAogICAgICAvKiogbG9hZGluZyBmbGFnICovCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAvKiogbWFuaXB1bGF0ZSBzaXR1YXRpb24gJ2FkZCcgb3IgJ2VkaXQnICovCiAgICAgIGFjdGlvblR5cGU6ICdhZGQnLAogICAgICAvKiogaWQgKi8KICAgICAgaWQ6ICcnLAogICAgICAvKiogZGF0ZSAqLwogICAgICBkYXRlOiAnJywKICAgICAgLyoqIHRpdGxlICovCiAgICAgIHRpdGxlOiAnJywKICAgICAgLyoqIGJhbGFuY2UgJ2luY29tZScgb3IgJ291dGdvJyAqLwogICAgICBpbm91dDogJycsCiAgICAgIC8qKiBjYXRhZ29yeSAqLwogICAgICBjYXRlZ29yeTogJycsCiAgICAgIC8qKiB0YWcgKi8KICAgICAgdGFnczogW10sCiAgICAgIC8qKiBhbW91bnQgKi8KICAgICAgYW1vdW50OiAwLAogICAgICAvKiogbWVtbyAqLwogICAgICBtZW1vOiAnJywKICAgICAgLyoqIGNhdGVnb3J5IGxpc3QgKi8KICAgICAgaW5jb21lSXRlbXM6IFsnY2F0ZWdvcnkxJywgJ2NhdGVnb3J5MiddLAogICAgICBvdXRnb0l0ZW1zOiBbJ2NhdGVnb3J5MycsICdjYXRlZ29yeTQnXSwKICAgICAgLyoqIGNhdGVnb3J5IGxpc3QgKi8KICAgICAgY2F0ZWdvcnlJdGVtczogW10sCiAgICAgIC8qKiB0YWcgbGlzdCAqLwogICAgICB0YWdJdGVtczogWyd0YWcxJywgJ3RhZzInXSwKICAgICAgLyoqIG9yaWdpbmFsIGRhdGXvvIh1c2luZyBhdCBlZGl0aW5nIG1vZGXvvIkgKi8KICAgICAgYmVmb3JlWU06ICcnLAogICAgICAvKiogdmFsaWRhdGlvbiBydWxlICovCiAgICAgIHRpdGxlUnVsZXM6IFsKICAgICAgICB2ID0+IHYudHJpbSgpLmxlbmd0aCA+IDAgfHwgJ1RpdGxlIGlzIHJlcXVpcmVkLicsCiAgICAgICAgdiA9PiB2Lmxlbmd0aCA8PSAyMCB8fCAnTGVzcyB0aGFuIDIwIGNoYXJhY3RlcnMnCiAgICAgIF0sCiAgICAgIHRhZ1J1bGU6IHYgPT4gdi5sZW5ndGggPD0gNSB8fCAnNSB0YWdzIGFyZSBtYXhpbXVtLicsCiAgICAgIGFtb3VudFJ1bGVzOiBbCiAgICAgICAgdiA9PiB2ID49IDAgfHwgJ05lZWQgdG8gYmUgbW9yZSB0aGFuIDAnLAogICAgICAgIHYgPT4gTnVtYmVyLmlzSW50ZWdlcih2KSB8fCAnTmVlZCB0byBiZSBpbnRlZ2VyJwogICAgICBdLAogICAgICBtZW1vUnVsZTogdiA9PiB2Lmxlbmd0aCA8PSA1MCB8fCAnTGVzcyB0aGFuIDUwIGNoYXJhY3RlcnMnCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbCiAgICAgIC8qKiBpbmNvbWUgY2F0ZWdvcnkgKi8KICAgICAgJ2luY29tZUl0ZW1zJywKICAgICAgJ291dGdvSXRlbXMnLAogICAgICAvKiogdGFnICovCiAgICAgICd0YWdJdGVtcycKICAgIF0pLAogICAgLi4ubWFwU3RhdGUoewogICAgICAvKiogc2V0IGxvYWRpbmcgKi8KICAgICAgbG9hZGluZzogc3RhdGUgPT4gc3RhdGUubG9hZGluZy5hZGQgfHwgc3RhdGUubG9hZGluZy51cGRhdGUKICAgIH0pLAogICAgLyoqIGRpYWxvZyB0aXRsZSAqLwogICAgdGl0bGVUZXh0ICgpIHsKICAgICAgcmV0dXJuIHRoaXMuYWN0aW9uVHlwZSA9PT0gJ2FkZCcgPyAnQWRkJyA6ICdFZGl0JwogICAgfSwKICAgIC8qKiBkaWFsb2cgYWN0aW9uICovCiAgICBhY3Rpb25UZXh0ICgpIHsKICAgICAgcmV0dXJuIHRoaXMuYWN0aW9uVHlwZSA9PT0gJ2FkZCcgPyAnQWRkJyA6ICdlZGl0JwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbCiAgICAgIC8qKiBhZGQgZGF0YSAqLwogICAgICAnYWRkQWJEYXRhJywKICAgICAgLyoqIHVwZGF0ZSBkYXRhICovCiAgICAgICd1cGRhdGVBYkRhdGEnCiAgICBdKSwKICAgIC8qKgogICAgICogU2hvdyB0aGUgZGlhbG9nCiAgICAgKiBUaGlzIG1ldGhvZCBpcyBjYWxsZWQgYnkgdGhlIHBhcmVudAogICAgICovCiAgICBvcGVuIChhY3Rpb25UeXBlLCBpdGVtKSB7CiAgICAgIHRoaXMuc2hvdyA9IHRydWUKICAgICAgdGhpcy5hY3Rpb25UeXBlID0gYWN0aW9uVHlwZQogICAgICB0aGlzLnJlc2V0Rm9ybShpdGVtKQogICAgICBpZiAoYWN0aW9uVHlwZSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgdGhpcy5iZWZvcmVZTSA9IGl0ZW0uZGF0ZS5zbGljZSgwLCA3KQogICAgICB9CiAgICB9LAogICAgLyoqIFRvIGNhbmNlbCAqLwogICAgb25DbGlja0Nsb3NlICgpIHsKICAgICAgdGhpcy5zaG93ID0gZmFsc2UKICAgIH0sCiAgICAvKiogVG8gYWRkIG9yIGVkaXQgKi8KICAgIGFzeW5jIG9uQ2xpY2tBY3Rpb24gKCkgewogICAgICBjb25zdCBpdGVtID0gewogICAgICAgIGRhdGU6IHRoaXMuZGF0ZSwKICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICBjYXRlZ29yeTogdGhpcy5jYXRlZ29yeSwKICAgICAgICB0YWdzOiB0aGlzLnRhZ3Muam9pbignLCcpLAogICAgICAgIG1lbW86IHRoaXMubWVtbywKICAgICAgICBpbmNvbWU6IG51bGwsCiAgICAgICAgb3V0Z286IG51bGwKICAgICAgfQogICAgICBpdGVtW3RoaXMuaW5vdXRdID0gdGhpcy5hbW91bnQgfHwgMAoKICAgICAgaWYgKHRoaXMuYWN0aW9uVHlwZSA9PT0gJ2FkZCcpIHsKICAgICAgICBhd2FpdCB0aGlzLmFkZEFiRGF0YSh7IGl0ZW0gfSkKICAgICAgfSBlbHNlIHsKICAgICAgICBpdGVtLmlkID0gdGhpcy5pZAogICAgICAgIGF3YWl0IHRoaXMudXBkYXRlQWJEYXRhKHsgYmVmb3JlWU06IHRoaXMuYmVmb3JlWU0sIGl0ZW0gfSkKICAgICAgfQoKICAgICAgdGhpcy5zaG93ID0gZmFsc2UKICAgIH0sCiAgICAvKiogaWYgY2hhbmdlIHRoZSBiYWxhbmNlICovCiAgICBvbkNoYW5nZUlub3V0ICgpIHsKICAgICAgaWYgKHRoaXMuaW5vdXQgPT09ICdpbmNvbWUnKSB7CiAgICAgICAgdGhpcy5jYXRlZ29yeUl0ZW1zID0gdGhpcy5pbmNvbWVJdGVtcwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY2F0ZWdvcnlJdGVtcyA9IHRoaXMub3V0Z29JdGVtcwogICAgICB9CiAgICAgIHRoaXMuY2F0ZWdvcnkgPSB0aGlzLmNhdGVnb3J5SXRlbXNbMF0KICAgIH0sCiAgICAvKiogaW5pdGlhbGl6ZSB0aGUgZm9ybSAqLwogICAgcmVzZXRGb3JtIChpdGVtID0ge30pIHsKICAgICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpCiAgICAgIGNvbnN0IHllYXIgPSB0b2RheS5nZXRGdWxsWWVhcigpCiAgICAgIGNvbnN0IG1vbnRoID0gKCcwJyArICh0b2RheS5nZXRNb250aCgpICsgMSkpLnNsaWNlKC0yKQogICAgICBjb25zdCBkYXRlID0gKCcwJyArIHRvZGF5LmdldERhdGUoKSkuc2xpY2UoLTIpCiAgICAgIHRoaXMuaWQgPSBpdGVtLmlkIHx8ICcnCiAgICAgIHRoaXMuZGF0ZSA9IGl0ZW0uZGF0ZSB8fCBgJHt5ZWFyfS0ke21vbnRofS0ke2RhdGV9YAogICAgICB0aGlzLnRpdGxlID0gaXRlbS50aXRsZSB8fCAnJwogICAgICB0aGlzLmlub3V0ID0gaXRlbS5pbmNvbWUgIT0gbnVsbCA/ICdpbmNvbWUnIDogJ291dGdvJwogICAgICBpZiAodGhpcy5pbm91dCA9PT0gJ2luY29tZScpIHsKICAgICAgICB0aGlzLmNhdGVnb3J5SXRlbXMgPSB0aGlzLmluY29tZUl0ZW1zCiAgICAgICAgdGhpcy5hbW91bnQgPSBpdGVtLmluY29tZSB8fCAwCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jYXRlZ29yeUl0ZW1zID0gdGhpcy5vdXRnb0l0ZW1zCiAgICAgICAgdGhpcy5hbW91bnQgPSBpdGVtLm91dGdvIHx8IDAKICAgICAgfQogICAgICB0aGlzLmNhdGVnb3J5ID0gaXRlbS5jYXRlZ29yeSB8fCB0aGlzLmNhdGVnb3J5SXRlbXNbMF0KICAgICAgdGhpcy50YWdzID0gaXRlbS50YWdzID8gaXRlbS50YWdzLnNwbGl0KCcsJykgOiBbXQogICAgICB0aGlzLm1lbW8gPSBpdGVtLm1lbW8gfHwgJycKICAgICAgdGhpcy4kcmVmcy5mb3JtLnJlc2V0VmFsaWRhdGlvbigpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ItemDialog.vue"],"names":[],"mappingsfile":"ItemDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- add／edit dialog -->\n  <v-dialog\n    v-model=\"show\"\n    scrollable\n    persistent\n    max-width=\"500px\"\n    eager\n  >\n    <v-card>\n      <v-card-title>{{ titleText }}</v-card-title>\n      <v-divider/>\n      <v-card-text>\n        <v-form ref=\"form\" v-model=\"valid\">\n          <!-- select date -->\n          <v-menu\n            ref=\"menu\"\n            v-model=\"menu\"\n            :close-on-content-click=\"false\"\n            :return-value.sync=\"date\"\n            transition=\"scale-transition\"\n            offset-y\n            max-width=\"290px\"\n            min-width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                v-model=\"date\"\n                prepend-icon=\"mdi-calendar\"\n                readonly\n                v-on=\"on\"\n                hide-details\n              />\n            </template>\n            <v-date-picker\n              v-model=\"date\"\n              color=\"green\"\n              locale=\"ja-jp\"\n              :day-format=\"date => new Date(date).getDate()\"\n              no-title\n              scrollable\n            >\n              <v-spacer/>\n              <v-btn text color=\"grey\" @click=\"menu = false\">Cancel</v-btn>\n              <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">Select</v-btn>\n            </v-date-picker>\n          </v-menu>\n          <!-- title -->\n          <v-text-field\n            label=\"title\"\n            v-model.trim=\"title\"\n            :counter=\"20\"\n            :rules=\"titleRules\"\n          />\n          <!-- balance -->\n          <v-radio-group\n            row\n            v-model=\"inout\"\n            hide-details\n            @change=\"onChangeInout\"\n          >\n            <v-radio label=\"income\" value=\"income\"/>\n            <v-radio label=\"expense\" value=\"outgo\"/>\n          </v-radio-group>\n          <!-- category -->\n          <v-select\n            label=\"category\"\n            v-model=\"category\"\n            :items=\"categoryItems\"\n            hide-details\n          />\n          <!-- tag -->\n          <v-select\n            label=\"tag\"\n            v-model=\"tags\"\n            :items=\"tagItems\"\n            multiple\n            chips\n            :rules=\"[tagRule]\"\n          />\n          <!-- amount -->\n          <v-text-field\n            label=\"amount\"\n            v-model.number=\"amount\"\n            prefix=\"￥\"\n            pattern=\"[0-9]*\"\n            :rules=\"amountRules\"\n          />\n          <!-- memo -->\n          <v-text-field\n            label=\"memo\"\n            v-model=\"memo\"\n            :counter=\"50\"\n            :rules=\"[memoRule]\"\n          />\n        </v-form>\n      </v-card-text>\n      <v-divider/>\n      <v-card-actions>\n        <v-spacer/>\n        <v-btn\n          color=\"grey darken-1\"\n          text\n          :disabled=\"loading\"\n          @click=\"onClickClose\"\n        >\n          cancel\n        </v-btn>\n        <v-btn\n          color=\"blue darken-1\"\n          text\n          :disabled=\"!valid\"\n          :loading=\"loading\"\n          @click=\"onClickAction\"\n        >\n          {{ actionText }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport { mapActions, mapGetters, mapState } from 'vuex'\nexport default {\n  name: 'ItemDialog',\n  data () {\n    return {\n      /** Is dialog shown?? */\n      show: false,\n      /** check the input data is valid */\n      valid: false,\n      /** date selection menu situation */\n      menu: false,\n      /** loading flag */\n      loading: false,\n      /** manipulate situation 'add' or 'edit' */\n      actionType: 'add',\n      /** id */\n      id: '',\n      /** date */\n      date: '',\n      /** title */\n      title: '',\n      /** balance 'income' or 'outgo' */\n      inout: '',\n      /** catagory */\n      category: '',\n      /** tag */\n      tags: [],\n      /** amount */\n      amount: 0,\n      /** memo */\n      memo: '',\n      /** category list */\n      incomeItems: ['category1', 'category2'],\n      outgoItems: ['category3', 'category4'],\n      /** category list */\n      categoryItems: [],\n      /** tag list */\n      tagItems: ['tag1', 'tag2'],\n      /** original date（using at editing mode） */\n      beforeYM: '',\n      /** validation rule */\n      titleRules: [\n        v => v.trim().length > 0 || 'Title is required.',\n        v => v.length <= 20 || 'Less than 20 characters'\n      ],\n      tagRule: v => v.length <= 5 || '5 tags are maximum.',\n      amountRules: [\n        v => v >= 0 || 'Need to be more than 0',\n        v => Number.isInteger(v) || 'Need to be integer'\n      ],\n      memoRule: v => v.length <= 50 || 'Less than 50 characters'\n    }\n  },\n  computed: {\n    ...mapGetters([\n      /** income category */\n      'incomeItems',\n      'outgoItems',\n      /** tag */\n      'tagItems'\n    ]),\n    ...mapState({\n      /** set loading */\n      loading: state => state.loading.add || state.loading.update\n    }),\n    /** dialog title */\n    titleText () {\n      return this.actionType === 'add' ? 'Add' : 'Edit'\n    },\n    /** dialog action */\n    actionText () {\n      return this.actionType === 'add' ? 'Add' : 'edit'\n    }\n  },\n  methods: {\n    ...mapActions([\n      /** add data */\n      'addAbData',\n      /** update data */\n      'updateAbData'\n    ]),\n    /**\n     * Show the dialog\n     * This method is called by the parent\n     */\n    open (actionType, item) {\n      this.show = true\n      this.actionType = actionType\n      this.resetForm(item)\n      if (actionType === 'edit') {\n        this.beforeYM = item.date.slice(0, 7)\n      }\n    },\n    /** To cancel */\n    onClickClose () {\n      this.show = false\n    },\n    /** To add or edit */\n    async onClickAction () {\n      const item = {\n        date: this.date,\n        title: this.title,\n        category: this.category,\n        tags: this.tags.join(','),\n        memo: this.memo,\n        income: null,\n        outgo: null\n      }\n      item[this.inout] = this.amount || 0\n\n      if (this.actionType === 'add') {\n        await this.addAbData({ item })\n      } else {\n        item.id = this.id\n        await this.updateAbData({ beforeYM: this.beforeYM, item })\n      }\n\n      this.show = false\n    },\n    /** if change the balance */\n    onChangeInout () {\n      if (this.inout === 'income') {\n        this.categoryItems = this.incomeItems\n      } else {\n        this.categoryItems = this.outgoItems\n      }\n      this.category = this.categoryItems[0]\n    },\n    /** initialize the form */\n    resetForm (item = {}) {\n      const today = new Date()\n      const year = today.getFullYear()\n      const month = ('0' + (today.getMonth() + 1)).slice(-2)\n      const date = ('0' + today.getDate()).slice(-2)\n      this.id = item.id || ''\n      this.date = item.date || `${year}-${month}-${date}`\n      this.title = item.title || ''\n      this.inout = item.income != null ? 'income' : 'outgo'\n      if (this.inout === 'income') {\n        this.categoryItems = this.incomeItems\n        this.amount = item.income || 0\n      } else {\n        this.categoryItems = this.outgoItems\n        this.amount = item.outgo || 0\n      }\n      this.category = item.category || this.categoryItems[0]\n      this.tags = item.tags ? item.tags.split(',') : []\n      this.memo = item.memo || ''\n      this.$refs.form.resetValidation()\n    }\n  }\n}\n</script>"]}]}