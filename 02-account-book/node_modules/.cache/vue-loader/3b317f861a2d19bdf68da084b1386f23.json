{"remainingRequest":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/src/views/Settings.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/src/views/Settings.vue","mtime":1644134393485},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/css-loader/dist/cjs.js","mtime":1644038728558},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644038728759},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/postcss-loader/src/index.js","mtime":1644038728712},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/cache-loader/dist/cjs.js","mtime":1644038724659},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/account-book02/node_modules/vue-loader/lib/index.js","mtime":1644038728759}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZvcm0td3JhcHBlciB7CiAgbWF4LXdpZHRoOiA1MDBweDsKICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <p>※This setting is unique for this device.</p>\n    <v-form v-model=\"valid\">\n      <h3>app setting</h3>\n      <!-- app name -->\n      <v-text-field\n        label=\"app name\"\n        v-model=\"settings.appName\"\n        :counter=\"30\"\n        :rules=\"[appNameRule]\"\n      />\n      <!-- API URL -->\n      <v-text-field\n        label=\"API URL\"\n        v-model=\"settings.apiUrl\"\n        :counter=\"150\"\n        :rules=\"[stringRule]\"\n      />\n      <!-- Auth Token -->\n      <v-text-field\n        label=\"Auth Token\"\n        v-model=\"settings.authToken\"\n        :counter=\"150\"\n        :rules=\"[stringRule]\"\n      />\n      <h3>category／tag setting</h3>\n      <p>comma separation is needed.</p>\n      <!-- income category -->\n      <v-text-field\n        label=\"income category\"\n        v-model=\"settings.strIncomeItems\"\n        :counter=\"150\"\n        :rules=\"[stringRule, ...categoryRules]\"\n      />\n      <!-- expense category -->\n      <v-text-field\n        label=\"expense category\"\n        v-model=\"settings.strOutgoItems\"\n        :counter=\"150\"\n        :rules=\"[stringRule, ...categoryRules]\"\n      />\n      <!-- tag -->\n      <v-text-field\n        label=\"tag\"\n        v-model=\"settings.strTagItems\"\n        :counter=\"150\"\n        :rules=\"[stringRule, tagRule]\"\n      />\n      <v-row class=\"mt-4\">\n        <v-spacer/>\n        <v-btn color=\"primary\" :disabled=\"!valid\" @click=\"onClickSave\">save</v-btn>\n      </v-row>\n    </v-form>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'Settings',\n  data () {\n    const createItems = v => v.split(',').map(v => v.trim()).filter(v => v.length !== 0)\n    const itemMaxLength = v => createItems(v).reduce((a, c) => Math.max(a, c.length), 0)\n    return {\n      /** Is the input data validated?? */\n      valid: false,\n      /** setting */\n      settings: { ...this.$store.state.settings },\n      /** validation rule */\n      appNameRule: v => v.length <= 30 || 'Less than 30 characters',\n      stringRule: v => v.length <= 150 || 'Less than 150 characters',\n      categoryRules: [\n        v => createItems(v).length !== 0 || 'More than one category is required',\n        v => itemMaxLength(v) <= 4 || 'Each category should be less than 5 letters'\n      ],\n      tagRule: v => itemMaxLength(v) <= 4 || 'Each category should be less than 5 letters'\n    }\n  },\n  methods: {\n    /** When save button is clicked. */\n    onClickSave () {\n      this.$store.dispatch('saveSettings', { settings: this.settings })\n    }\n  }\n  }\n</script>\n\n<style>\n.form-wrapper {\n  max-width: 500px;\n  margin: auto;\n}\n</style>"]}]}