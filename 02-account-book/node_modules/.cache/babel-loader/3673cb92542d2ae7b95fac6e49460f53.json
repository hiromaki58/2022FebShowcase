{"remainingRequest":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/babel-loader/lib/index.js!/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/eslint-loader/index.js??ref--14-0!/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/src/store/index.js","dependencies":[{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/src/store/index.js","mtime":1644297387392},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/babel.config.js","mtime":1644040276522},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/cache-loader/dist/cjs.js","mtime":1644038724659},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/babel-loader/lib/index.js","mtime":1644038724176},{"path":"/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/node_modules/eslint-loader/index.js","mtime":1644038727600}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/hirog/Desktop/portfolio/vue_accountBook/02-account-book/src/store/index.js"],"names":["Vue","Vuex","gasApi","use","state","abData","loading","fetch","add","update","delete","errorMessage","settings","appName","apiUrl","authToken","strIncomeItems","strOutgoItems","strTagItems","mutations","setAbData","yearMonth","list","addAbData","item","date","slice","push","updateAbData","index","findIndex","v","id","splice","deleteAbData","setLoading","type","setErrorMessage","message","saveSettings","document","title","setUrl","setAuthToken","localStorage","setItem","JSON","stringify","loadSettings","parse","getItem","Object","assign","actions","fetchAbData","commit","console","log","res","data","beforeYM","createItems","split","map","trim","filter","length","getters","incomeItems","outgoItems","tagItems","store","Store"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport gasApi from '../api/gasApi'\n\nVue.use(Vuex)\n\n/**\n * State\n * Vuex situation\n */\nconst state = {\n  /** account book data */\n  abData: {},\n  /** check loaidng */\n  loading: {\n    fetch: false,\n    add: false,\n    update: false,\n    delete: false\n  },\n  /** error message */\n  errorMessage: '',\n  /** setting */\n  settings: {\n    appName: 'Accounting book',\n    apiUrl: '',\n    authToken: '',\n    strIncomeItems: 'Salary, Bonus, Carry forward',\n    strOutgoItems: 'Food expense, Hobby, Fare, Entertainment expense, rent, Communoication cost, Car, Tax',\n    strTagItems: 'Fixed cost, Credit card'\n  }\n}\n/**\n * Mutations\n * Called from Actions when State is updated.\n */\nconst mutations = {\n  /** set the selected month account book data */\n  setAbData (state, { yearMonth, list }) {\n    state.abData[yearMonth] = list\n  },\n\n  /** Add the data */\n  addAbData (state, { item }) {\n    const yearMonth = item.date.slice(0, 7)\n    const list = state.abData[yearMonth]\n    if (list) {\n      list.push(item)\n    }\n  },\n\n  /** update the selected month data */\n  updateAbData (state, { yearMonth, item }) {\n    const list = state.abData[yearMonth]\n    if (list) {\n      const index = list.findIndex(v => v.id === item.id)\n      list.splice(index, 1, item)\n    }\n  },\n\n  /** remove the selected month and id data */\n  deleteAbData (state, { yearMonth, id }) {\n    const list = state.abData[yearMonth]\n    if (list) {\n      const index = list.findIndex(v => v.id === id)\n      list.splice(index, 1)\n    }\n  },\n  /** set the loading */\n  setLoading (state, { type, v }) {\n    state.loading[type] = v\n  },\n  /** set the error message */\n  setErrorMessage (state, { message }) {\n    state.errorMessage = message\n  },\n  /** save the setting */\n  saveSettings (state, { settings }) {\n    state.settings = { ...settings }\n    const { appName, apiUrl, authToken } = state.settings\n    document.title = appName\n    gasApi.setUrl(apiUrl)\n    gasApi.setAuthToken(authToken)\n    // initialize the account book\n    state.abData = {}\n\n    localStorage.setItem('settings', JSON.stringify(settings))\n  },\n\n  /** load the setting */\n  loadSettings (state) {\n    const settings = JSON.parse(localStorage.getItem('settings'))\n    if (settings) {\n      state.settings = Object.assign(state.settings, settings)\n    }\n    const { appName, apiUrl, authToken } = state.settings\n    document.title = appName\n    gasApi.setUrl(apiUrl)\n    gasApi.setAuthToken(authToken)\n  }\n}\n\n/**\n * Actions\n * Called from the interface and commit the Mutation\n */\nconst actions = {\n  /** get the selected month account book data */\n  async fetchAbData ({ commit }, { yearMonth }) {\n    const type = 'fetch'\n    console.log('fethc is called.')\n    commit('setLoading', { type, v: true })\n    try {\n      const res = await gasApi.fetch(yearMonth)\n      commit('setAbData', { yearMonth, list: res.data })\n    } catch (e) {\n      commit('setErrorMessage', { message: e })\n      commit('setAbData', { yearMonth, list: [] })\n    } finally {\n      commit('setLoading', { type, v: false })\n    }\n  },\n\n  /** add the data */\n  async addAbData ({ commit }, { item }) {\n    const type = 'add'\n    commit('setLoading', { type, v: true })\n    try {\n      const res = await gasApi.add(item)\n      commit('addAbData', { item: res.data })\n    } catch (e) {\n      commit('setErrorMessage', { message: e })\n    } finally {\n      commit('setLoading', { type, v: false })\n    }\n  },\n\n  /** update the data */\n  async updateAbData ({ commit }, { beforeYM, item }) {\n    const type = 'update'\n    const yearMonth = item.date.slice(0, 7)\n    commit('setLoading', { type, v: true })\n    try {\n      const res = await gasApi.update(beforeYM, item)\n      if (yearMonth === beforeYM) {\n        commit('updateAbData', { yearMonth, item })\n        return\n      }\n      const id = item.id\n      commit('deleteAbData', { yearMonth: beforeYM, id })\n      commit('addAbData', { item: res.data })\n    } catch (e) {\n      commit('setErrorMessage', { message: e })\n    } finally {\n      commit('setLoading', { type, v: false })\n    }\n  },\n\n  /** remove the data */\n  async deleteAbData ({ commit }, { item }) {\n    const type = 'delete'\n    const yearMonth = item.date.slice(0, 7)\n    const id = item.id\n    commit('setLoading', { type, v: true })\n    try {\n      await gasApi.delete(yearMonth, id)\n      commit('deleteAbData', { yearMonth, id })\n    } catch (e) {\n      commit('setErrorMessage', { message: e })\n    } finally {\n      commit('setLoading', { type, v: false })\n    }\n  },\n\n  /** save the setting */\n  saveSettings ({ commit }, { settings }) {\n    commit('saveSettings', { settings })\n  },\n\n  /** load the setting */\n  loadSettings ({ commit }) {\n    commit('loadSettings')\n  }\n}\n\n/** set the comma sepalated letters into the array */\nconst createItems = v => v.split(',').map(v => v.trim()).filter(v => v.length !== 0)\n\n/**\n * Getters\n * get if from the interface and pass the  modified State info\n */\nconst getters = {\n  /** income category（array） */\n  incomeItems (state) {\n    return createItems(state.settings.strIncomeItems)\n  },\n  /** expense category（array */\n  outgoItems (state) {\n    return createItems(state.settings.strOutgoItems)\n  },\n  /** tag（array） */\n  tagItems (state) {\n    return createItems(state.settings.strTagItems)\n  }\n}\n\nconst store = new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n})\n\nexport default store"]}]}